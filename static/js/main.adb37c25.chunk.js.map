{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Artists.js","components/Songs.js","components/SingleArtist.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","id","to","className","Home","Artists","useState","artistName","setArtistName","useEffect","getData","artistsArr","fetch","then","res","json","myJson","i","length","push","formattedArtists","map","Songs","SingleArtist","albums","setAlbums","members","setMembers","useParams","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAS,WACpB,OACE,sBAAKC,GAAG,SAAR,UACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,cAAvB,kBACA,cAAC,IAAD,CAAMD,GAAG,WAAWC,UAAU,cAA9B,qBACA,cAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,cAA5B,uBCPOC,EAAO,WAClB,OACE,sBAAKD,UAAU,OAAf,UACE,sDACA,kH,QCDOE,EAAU,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACpBC,EADoB,KACRC,EADQ,KAG3BC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAU,WACd,IAAMC,EAAa,GACnBC,MAAM,kFACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IACjCN,EAAWQ,KAAKH,EAAOC,GAAP,QAElBT,EAAcG,OAIZS,EAAmBb,EAAWc,KAAI,SAAAJ,GAAC,OACvC,cAAC,IAAD,CAAMf,GAAE,mBAAce,GAAad,UAAU,cAA7C,SACGc,GAD6BA,MAMlC,OACE,sBAAKd,UAAU,OAAf,UACE,yCACCiB,MChCME,EAAQ,WACnB,OACE,sBAAKnB,UAAU,OAAf,UACE,uCACA,uE,OCDOoB,EAAe,WAAO,IAAD,EACJjB,mBAAS,MADL,mBACzBkB,EADyB,KACjBC,EADiB,OAEFnB,mBAAS,MAFP,mBAEzBoB,EAFyB,KAEhBC,EAFgB,KAGxBpB,EAAeqB,cAAfrB,WAERE,qBAAU,WACRC,MACC,IAGH,IAAMA,EAAU,WACdE,MAAM,kFACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IAC7BD,EAAOC,GAAP,SAAwBV,IAC1BkB,EAAUT,EAAOC,GAAP,QACVU,EAAWX,EAAOC,GAAP,cA0BnB,OACE,sBAAKd,UAAU,OAAf,UACE,6BAAKI,IACL,yCACA,4BAAe,OAAXiB,EAvBCA,EAAOH,KAAI,SAAAJ,GAAC,OACjB,sCACMA,EAAE,GADR,aACeA,EAAE,GADjB,MAAQA,EAAE,OAsB+B,OACzC,0CACA,4BAAIS,QCzBKG,MAhBf,WACE,OACE,cAAC,IAAD,UACE,sBAAK1B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2B,KAAK,uBAAuBC,UAAWR,IAC9C,cAAC,IAAD,CAAOO,KAAK,WAAWC,UAAW1B,IAClC,cAAC,IAAD,CAAOyB,KAAK,SAASC,UAAWT,IAChC,cAAC,IAAD,CAAOQ,KAAK,IAAIC,UAAW3B,aCRtB4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.adb37c25.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\nexport const Navbar = () => {\n  return (\n    <div id=\"navbar\">\n      <Link to=\"/\" className=\"navbar-link\">Home</Link>\n      <Link to=\"/artists\" className=\"navbar-link\">Artists</Link>\n      <Link to=\"/songs\" className=\"navbar-link\">Songs</Link>\n    </div>\n  )\n}","export const Home = () => {\n  return (\n    <div className=\"main\">\n      <h1>Celtic Lyrics Corner</h1>\n      <p>Hello and welcome to Celtic Lyrics Corner! Please feel free to browse around!</p>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react' \nimport { Link } from 'react-router-dom'\n\nexport const Artists = () => {\n  const [artistName, setArtistName] = useState([])\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  const getData = () => {\n    const artistsArr = []\n    fetch('https://raw.githubusercontent.com/danmolloy/clc-frontend/main/public/data.json')\n    .then(res => res.json())\n    .then(myJson => {\n      for (let i = 0; i < myJson.length; i++) {\n        artistsArr.push(myJson[i][\"artist\"])\n      }\n      setArtistName(artistsArr)\n    })\n  }\n\n  const formattedArtists = artistName.map(i => \n    <Link to={`/artists/${i}`} key={i} className=\"artist-link\">\n      {i}\n      </Link>\n    )\n\n\n  return (\n    <div className=\"main\">\n      <h2>Artists</h2>\n      {formattedArtists}\n    </div>\n  )\n}","export const Songs = () => {\n  return (\n    <div className=\"main\">\n      <h2>Songs</h2>\n      <h3>Complete songs list coming soon..</h3>\n    </div>\n  )\n}","import { useParams } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\n\nexport const SingleArtist = () => {\n  const [albums, setAlbums] = useState(null)\n  const [members, setMembers] = useState(null)\n  const { artistName } = useParams();\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n\n  const getData = () => {\n    fetch('https://raw.githubusercontent.com/danmolloy/clc-frontend/main/public/data.json')\n    .then(res => res.json())\n    .then(myJson => {\n      for (let i = 0; i < myJson.length; i ++) {\n        if (myJson[i][\"artist\"] === artistName) {\n          setAlbums(myJson[i][\"albums\"])\n          setMembers(myJson[i][\"members\"])\n        }\n      }\n    })\n  }\n\n  const renderedAlbums = () => {\n    return albums.map(i => \n      <p key={i[1]}>\n        {`${i[1]} (${i[0]})`}\n      </p>\n      )\n  }\n  \n\n  const renderedMembers = () => {\n    let aAcuteRegEx = /&aacute;/\n    while (aAcuteRegEx.test(members)) {\n      let valIndex = members.match(aAcuteRegEx).valIndex\n      let arrMembers = members.split('')\n      arrMembers.splice(valIndex, 8, 'รก')\n      setMembers(arrMembers.join(''))\n    }\n  }\n\n\n  return (\n    <div className=\"main\">\n      <h2>{artistName}</h2>\n      <h3>Albums:</h3>\n      <p>{albums !== null ? renderedAlbums() : null}</p>\n      <h3>Members:</h3>\n      <p>{members}</p>\n    </div>\n  )\n}\n","import './App.css';\nimport { Navbar } from './components/Navbar';\nimport { Home } from './components/Home'\nimport { Artists } from './components/Artists'\nimport { Songs } from './components/Songs'\nimport { BrowserRouter as Router,\n  Switch,\n  Route,\n  Link } from 'react-router-dom'\nimport { SingleArtist } from './components/SingleArtist'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/artists/:artistName\" component={SingleArtist} />\n          <Route path=\"/artists\" component={Artists} />\n          <Route path=\"/songs\" component={Songs} />\n          <Route path=\"/\" component={Home}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}